version: '{{cookiecutter.compose_version}}'
{%- set db_tag = 'post' in cookiecutter.db_mode and 'postgres' or cookiecutter.db_mode %}
x-images:
  env: &env
    env_file: [ .env, docker.env ]
    environment: &env_vars
      APP_TYPE: "${APP_TYPE-{{cookiecutter.app_type}}}"
      SYMFONY_NAME: "${SYMFONY_NAME-{{cookiecutter.symfony_project_name}}}"
      # docker variables
      DB_MODE: "${DB_MODE:-{{cookiecutter.db_mode}}}"
      PHP_USER: "${PHP_USER-{{cookiecutter.php_user}}}"
      PHP_GROUP: "${PHP_GROUP-{{cookiecutter.php_group}}}"
      DRUPAL_ENV_NAME: "${DRUPAL_ENV_NAME-prod}"
      APP_SECRET: "${APP_SECRET-77fd8b950969a6909c46ab0b6fd5d062}"
      IMAGE_MODE: phpfpm
      APP_TYPE: {{cookiecutter.app_type}}
      # docker variables that can be overriden via .env/docker.env
      # This need to be changed in production
      ADMIN_PASS: "admin"
      MAILCATCHER_USER: "${MAILCATCHER_USER-mailcatcher}"
      MAILCATCHER_PASSWORD: "${MAILCATCHER_PASSWORD-mailcatcher}"
      # parsed/replaced in CI via env-subst
      SYMFONY_DISPATCH_COMMAND: "${SYMFONY_DISPATCH_COMMAND:-{{cookiecutter.symfony_dispatch_command}}}"
      NGINX_SERVERNAME: "${NGINX_SERVERNAME-{{cookiecutter.local_domain}}}"
      NGINX_SERVER_ALIASES: "${NGINX_SERVER_ALIASES-www.{{cookiecutter.local_domain}}}"
{%- if 'post' in cookiecutter.db_mode %}
      POSTGRES_STARTUP_TIMEOUT: "${POSTGRES_STARTUP_TIMEOUT-45s}"
      POSTGRES_HOST: "${POSTGRES_HOST-db}"
      POSTGRES_PORT: "${POSTGRES_PORT-5432}"
      POSTGRES_DB: "${POSTGRES_DB-db}"
      POSTGRES_USER: "${POSTGRES_USER-user}"
      POSTGRES_PASSWORD: "${POSTGRES_PASSWORD-password}"
      PGPASSWD: "${POSTGRES_PASSWORD-password}"
      PGPASSWORD: "${POSTGRES_PASSWORD-password}"
      DATABASE_URL: "${DATABASE_URL-pgsql://user:password@db:5432/db}"
      DATABASE_URL_LOCK: "${DATABASE_URL_LOCK:-postgresql+advisory://user:password@db:5432/db}"
{%- elif cookiecutter.db_mode.startswith('m') %}
      MYSQL_HOST: "${MYSQL_HOST-db}"
      MYSQL_PORT: "${MYSQL_PORT-3306}"
      MYSQL_DATABASE: "${MYSQL_DATABASE-db}"
      MYSQL_USER: "${MYSQL_USER-user}"
      MYSQL_ROOT_PASSWORD: "${MYSQL_ROOT_PASSWORD:-${MYSQL_PASSWORD:-password}}"
      MYSQL_PASSWORD: "${MYSQL_PASSWORD-password}"
      DATABASE_URL: "${DATABASE_URL-mysql://user:password@db:3306/db}"
      DATABASE_DRIVER: "${DATABASE_DRIVER-mysql}"
      DATABASE_DB: "${MYSQL_DATABASE-db}"
      DATABASE_USER: "${MYSQL_USER-user}"
      DATABASE_PASSWD: "${MYSQL_PASSWORD-password}"
      DATABASE_HOST: "${MYSQL_HOST-db}"
      DATABASE_PORT: "${MYSQL_PORT-3306}"
{%- else %}
      DB_HOST: "${DB_HOST-db}"
      DB_PORT: "${DB_PORT-{{cookiecutter.db_port}}}"
      DB_NAME: "${DB_NAME-db}"
      DB_USER: "${DB_USER-user}"
      DB_PASSWORD: "${DB_PASSWORD-password}"
      DATABASE_DRIVER: "${DATABASE_DRIVER-sqlite}"
      DATABASE_DB: "${DB_NAME-sites/default/files/.ht5.sqlite}"
      DATABASE_USER: "${DB_USER-user}"
      DATABASE_PASSWD: "${DB_PASSWORD-password}"
      DATABASE_HOST: "${DB_HOST-db}"
      DATABASE_PORT: "${DB_PORT-}"
{%- endif %}
      #
      COOKIE_DOMAIN: "${COOKIE_DOMAIN-{{cookiecutter.local_domain}}}"
      ABSOLUTE_URL_SCHEME: "${ABSOLUTE_URL_SCHEME-http{%if cookiecutter.ssl_in_dev %}s{%endif%}}"
      ABSOLUTE_URL_DOMAIN: "${ABSOLUTE_URL_DOMAIN-{{cookiecutter.local_domain}}}"
      ABSOLUTE_URL_PORT: "${ABSOLUTE_URL_PORT-:{%if cookiecutter.ssl_in_dev%}{{cookiecutter.local_https_port}}{% else %}{{cookiecutter.local_http_port}}{% endif %}}"
      ABSOLUTE_URL_DOMAIN_ESCAPE: "${ABSOLUTE_URL_DOMAIN_ESCAPE-{{cookiecutter.local_domain.replace('.', '\\\\.')}}}"
      ABSOLUTE_URL_PORT: "${ABSOLUTE_URL_PORT-{{cookiecutter.local_http_port}}}"
      PHP_MAX_WORKERS: "${PHP_MAX_WORKERS-10}"
      PHP_MAX_SPARE_WORKERS: "${PHP_MAX_SPARE_WORKERS-5}"
      PHP_MIN_SPARE_WORKERS: "${PHP_MIN_SPARE_WORKERS-3}"
      PHP_MEMORY_LIMIT: "${PHP_MEMORY_LIMIT:-{{cookiecutter.php_memory_limit}}}"
      PHP_XDEBUG_ENABLED: "${PHP_XDEBUG_ENABLED-0}"
      # This need to be changed in production
      PHP_MAX_WORKERS: "${PHP_MAX_WORKERS-10}"
      PHP_MAX_SPARE_WORKERS: "${PHP_MAX_SPARE_WORKERS-5}"
      PHP_MIN_SPARE_WORKERS: "${PHP_MIN_SPARE_WORKERS-3}"
      PHP_XDEBUG_ENABLED: "${PHP_XDEBUG_ENABLED-0}"
      PHP_MEMORY_LIMIT: "${PHP_MEMORY_LIMIT:-{{cookiecutter.php_memory_limit}}}"
  {{cookiecutter.app_type}}: &{{cookiecutter.app_type}}
    <<: [ *env ]
    tty: true
    image: "${{'{'}}{{cookiecutter.app_type.upper()}}_IMAGE}:${{'{'}}{{cookiecutter.app_type.upper()}}_IMAGE_VERSION}-dev"
    environment: &{{cookiecutter.app_type}}_env
      <<: [ *env_vars ]
      PROJECT_PACKAGE: "${PROJECT_PACKAGE-{{cookiecutter.symfony_project_name}}}"
      PROJECT_DIR: "${PROJECT_DIR-/code/app}"
      PHP_USER: "{{cookiecutter.app_type}}"
      PHP_GROUP: "{%if cookiecutter.base_os=='centos'%}apache{%else%}www-data{%endif%}"
      APP_ENV: "${APP_ENV:-prod}"
      APP_SECRET: "${APP_SECRET:-77fd8b950969a6909c46ab0b6fd5d062}"
      IMAGE_MODE: phpfpm
    depends_on:
    - db
{%-if cookiecutter.cache_system %}
    - {{cookiecutter.cache_system}}
{%-endif%}
    working_dir: /code/app
    command: [/init.sh]
    volumes:
    - publiccontrib:{{cookiecutter.public_files_path}}
    - publicbundles:{{cookiecutter.public_bundles_path}}
    - private:{{cookiecutter.private_path}}
    - cache:{{cookiecutter.cache_path}}
    # volume that we need to feed for nginx docker
    - webroot:/code/app/var/nginxwebroot
    - "${DATA_VOLUME:-./data}:/code/data"
services:
  log:
    <<: [ *env ]
    image: "{{cookiecutter.rsyslog_image}}"
  mailcatcher:
    <<: [ *env ]
    image: "{{cookiecutter.mailhog_image}}"
    hostname: mailcatcher
    volumes: ["mails:/mails"]
{%- if cookiecutter.cache_system %}
  {{cookiecutter.cache_system}}:
    <<: [ *env ]
    image: "{{cookiecutter.cache_image}}"
    hostname: "{{cookiecutter.cache_system}}"
{%- if cookiecutter.cache_system in ['redis'] %}
    volumes:
    - '{{cookiecutter.cache_system}}:/data'
{%- endif %}
{%-endif%}
  db:
    <<: [ *env ]
    image: "{{cookiecutter["{0}_image".format(cookiecutter.db_mode)]}}"
{%- if cookiecutter.db_mode.startswith('post') %}
    entrypoint: ['sh', '-exc', 'docker-entrypoint.sh postgres -N $$POSTGRES_MAX_CONNECTIONS']
{%- endif %}
    environment:
      <<: [ *env_vars ]
{%- if cookiecutter.db_mode.startswith('p') %}
      POSTGRES_MAX_CONNECTIONS: "${POSTGRES_MAX_CONNECTIONS:-2000}"
{%- endif %}
    volumes:
{%- if cookiecutter.db_mode.startswith('p') %}
    - postgresql:/var/lib/postgresql/data
{%- elif cookiecutter.db_mode.startswith('m') %}
    - mysql:/var/lib/mysql
{%-endif %}
  nginx:
    <<: [ *env ]
    image: "{{cookiecutter.nginx_image}}"
    depends_on: [{{cookiecutter.app_type}}, mailcatcher]
    volumes:
    - ./sys/etc/nginx/vhost.conf.template:/etc/nginx/conf.d/default.conf.template
    - webroot:{{cookiecutter.public_path}}
    - publiccontrib:{{cookiecutter.public_files_path}}:ro
    - publicbundles:{{cookiecutter.public_bundles_path}}:ro
    - private:{{cookiecutter.private_path}}:ro
    - nginx-certs:/certs
    - "${DATA_VOLUME:-./data}:/code/data"
    environment:
      <<: [ *env_vars ]
      NO_SSL: "0"
      NO_FORCE_SSL: "0"
  {{cookiecutter.app_type}}:
    <<: [ *{{cookiecutter.app_type}} ]
{%- if cookiecutter.with_supervisor %}
  {{cookiecutter.app_type}}-supervisor:
    <<: [ *{{cookiecutter.app_type}} ]
    environment:
      <<: [ *{{cookiecutter.app_type}}_env ]
      IMAGE_MODE: supervisor
      NO_MIGRATE: 1
      NO_COMPOSER: 1
      NO_COLLECT_STATIC: 1
    depends_on:
      - {{cookiecutter.app_type}}
{%-endif%}
{%- if not cookiecutter.remove_cron %}
  cron:
    <<: [ *{{cookiecutter.app_type}} ]
    environment:
      <<: [ *{{cookiecutter.app_type}}_env ]
      IMAGE_MODE: cron
    depends_on:
    - {{cookiecutter.app_type}}
{% endif %}
  backup:
    <<: [ *env ]
    image: "corpusops/dbsmartbackup:{{db_tag}}-{{cookiecutter.db_version}}"
volumes:
{%- if 'post' in cookiecutter.db_mode %}
  postgresql:
{%- elif cookiecutter.db_mode.startswith('m') %}
  mysql:
{%- endif %}
{%-if cookiecutter.cache_system%}
  {{cookiecutter.cache_system}}:
{%-endif%}
  nginx-certs:
  webroot:
  publiccontrib:
  publicbundles:
  private:
  cache:
  mails:
