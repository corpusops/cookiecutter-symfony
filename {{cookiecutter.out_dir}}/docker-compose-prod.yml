version: '{{cookiecutter.compose_version}}'
x-log: &log
  depends_on: [log]
  logging: {driver: syslog, options: {tag: '{{'{{'}}index .ContainerLabels "com.docker.compose.service"}}', syslog-address: "tcp://${SYSLOG_ADDRESS:-127.0.0.1}:${SYSLOG_PORT:-{{cookiecutter.syslog_port}}}"}}
x-restart: &restart
  restart: unless-stopped
x-{{cookiecutter.app_type}}: &{{cookiecutter.app_type}}
  image: "${{'{'}}{{cookiecutter.app_type.upper()}}_IMAGE}:${{'{'}}{{cookiecutter.app_type.upper()}}_IMAGE_VERSION}"
  volumes:
  - logs:/logs
x-images:
  bypass: &bypass
    command: 'sh -c "while true;do echo notstarted;sleep 65000;done"'
    entrypoint: 'sh -c "while true;do echo notstarted;sleep 65000;done"'
    restart: "no"
services:
  log:
    <<: [ *restart ]
    volumes: [logs:/var/log]
    ports: ["${SYSLOG_ADDRESS:-127.0.0.1}:${SYSLOG_PORT:-{{cookiecutter.syslog_port}}}:10514"]
  nginx:
    <<: [ *restart, *log ]
    ports:
    - "${SYMFONY_HTTP_LISTEN:-0.0.0.0}:${SYMFONY_HTTP_PORT:-80}:80"
    - "${SYMFONY_HTTP_LISTEN:-0.0.0.0}:${SYMFONY_HTTPS_PORT:-443}:443"
  {{cookiecutter.app_type}}:
    <<: [ *{{cookiecutter.app_type}}, *restart, *log ]
    ports:
    - "${SYMFONY_API_LISTEN:-127.0.0.1}:${SYMFONY_API_PORT:-9000}:9000"
{%- if cookiecutter.with_supervisor %}
  {{cookiecutter.app_type}}-supervisor:
    <<: [ *{{cookiecutter.app_type}}, *restart, *log ]
{%-endif%}
{%- if not cookiecutter.remove_cron %}
  cron:
    <<: [ *{{cookiecutter.app_type}}, *restart, *log ]
{%- endif%}
  backup:
    <<: [ *restart, *log ]
    volumes:
    - backupdb-dumps:/var/db_smart_backup/
  mailcatcher:
    <<: [ *restart, *log ]
{%-if cookiecutter.cache_system%}
  {{cookiecutter.cache_system}}:
    <<: [ *restart, *log ]
{%-endif%}
  db:
    <<: [ *restart, *log ]
{%- if cookiecutter.db_mode.startswith('post') %}
    environment:
      POSTGRES_MAX_CONNECTIONS: "${POSTGRES_MAX_CONNECTIONS:-100}"
{%- endif %}
volumes:
  backupdb-dumps:
  logs:
